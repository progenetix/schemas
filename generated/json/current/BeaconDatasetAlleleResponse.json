{
   "$id" : "https://progenetix.org/services/schemas/BeaconDatasetAlleleResponse/v2021-03-09",
   "$schema" : "https://json-schema.org/draft/2020-12/schema",
   "description" : "Response containing information about an allele in a particular dataset.\n",
   "examples" : [],
   "meta" : {
      "contributors" : [
         {
            "description" : "ELIXIR Beacon project team",
            "id" : "https://beacon-project.io/categories/people.html"
         },
         {
            "description" : "Jordi Rambla",
            "id" : "github:@jrambla"
         },
         {
            "description" : "Sabele de la Torre",
            "id" : "github:@sdelatorrep"
         },
         {
            "description" : "Mamana Mbiyavanga",
            "id" : "github:@mamanambiya"
         },
         {
            "description" : "Michael Baudis",
            "id" : "orcid:0000-0002-9903-4248"
         }
      ],
      "provenance" : [
         {
            "description" : "Beacon v2",
            "id" : "https://github.com/ga4gh-beacon/specification-v2"
         },
         {
            "description" : "Progenetix `bycon` project",
            "id" : "https://github.com/progenetix/bycon/"
         }
      ],
      "sb_status" : "community",
      "used_by" : [
         {
            "description" : "Progenetix database schema (Beacon+ backend)",
            "id" : "https://github.com/progenetix/schemas/"
         }
      ]
   },
   "properties" : {
      "callCount" : {
         "description" : "Total number of calls in the dataset. Missing calls are not \nincluded.\n",
         "format" : "int64",
         "minimum" : "0",
         "type" : "integer"
      },
      "datasetHandover" : {
         "items" : {
            "$ref" : "BeaconHandover.yaml#/properties"
         },
         "type" : "array"
      },
      "datasetId" : {
         "description" : "not provided\n",
         "type" : "string"
      },
      "exists" : {
         "description" : "Indicator of whether the given allele was observed in the dataset. This should be non-null, unless there was an error, in which case `error` has to be non-null.",
         "type" : "boolean"
      },
      "externalUrl" : {
         "description" : "URL to an external system, such as a secured beacon or a system providing more information about a given allele (RFC 3986 format).",
         "type" : "string"
      },
      "frequency" : {
         "description" : "Frequency of this allele in the dataset. Between 0 and 1, inclusive.\n",
         "maximum" : "1",
         "minimum" : "0",
         "type" : "number"
      },
      "info" : {
         "description" : "Additional unspecified metadata about the dataset response or its \ncontent.\n",
         "example" : {
            "additionalInfoKey1" : [
               "additionalInfoValue1",
               "additionalInfoValue2]"
            ],
            "additionalInfoKey2" : "additionalInfoValue3"
         },
         "type" : "object"
      },
      "note" : {
         "description" : "Additional note or description of the response.\n",
         "type" : "string"
      },
      "sampleCount" : {
         "description" : "Number of samples in the dataset where the requested allele is \nfound.\n",
         "format" : "int64",
         "minimum" : "0",
         "type" : "integer"
      },
      "variantCount" : {
         "description" : "Number of times the requested allele has been observed in the \ndataset.\n",
         "format" : "int64",
         "minimum" : "0",
         "type" : "integer"
      }
   },
   "required" : [
      "datasetId"
   ],
   "title" : "BeaconDatasetAlleleResponse",
   "type" : "object"
}

